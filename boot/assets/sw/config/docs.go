// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package config

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/rk/apis": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "List API",
                "operationId": "5",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rkgin.ApiResponse"
                            }
                        }
                    }
                }
            }
        },
        "/v1/rk/certs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "List CertEntry",
                "operationId": "9",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rkgin.CertResponse"
                            }
                        }
                    }
                }
            }
        },
        "/v1/rk/configs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "List ConfigEntry",
                "operationId": "4",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rkgin.ConfigResponse"
                        }
                    }
                }
            }
        },
        "/v1/rk/entries": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "List all Entry",
                "operationId": "8",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rkgin.EntryResponse"
                            }
                        }
                    }
                }
            }
        },
        "/v1/rk/gc": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Trigger Gc",
                "operationId": "2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rkgin.GcResponse"
                        }
                    }
                }
            }
        },
        "/v1/rk/healthy": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get application healthy status",
                "operationId": "1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rkgin.HealthyResponse"
                        }
                    }
                }
            }
        },
        "/v1/rk/info": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get application and process info",
                "operationId": "3",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rkentry.ProcessInfo"
                        }
                    }
                }
            }
        },
        "/v1/rk/logs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "List logger related entries",
                "operationId": "10",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rkgin.LogResponse"
                            }
                        }
                    }
                }
            }
        },
        "/v1/rk/req": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "List prometheus metrics of requests",
                "operationId": "7",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rkentry.ReqMetricsRK"
                        }
                    }
                }
            }
        },
        "/v1/rk/sys": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get OS Stat",
                "operationId": "6",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rkgin.SysResponse"
                        }
                    }
                }
            }
        },
        "/v1/rk/tv": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "summary": "Get HTML page of /tv",
                "operationId": "11",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rkentry.CpuInfo": {
            "type": "object",
            "properties": {
                "cacheSize": {
                    "type": "integer"
                },
                "cpuUsedPercentage": {
                    "type": "number"
                },
                "logicalCoreCount": {
                    "type": "integer"
                },
                "mhz": {
                    "type": "number"
                },
                "modelName": {
                    "type": "string"
                },
                "physicalCoreCount": {
                    "type": "integer"
                },
                "vendorId": {
                    "type": "string"
                }
            }
        },
        "rkentry.Entry": {
            "type": "object"
        },
        "rkentry.GoEnvInfo": {
            "type": "object",
            "properties": {
                "goArch": {
                    "type": "string"
                },
                "goos": {
                    "type": "string"
                },
                "routinesCount": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "upTimeSec": {
                    "type": "integer"
                },
                "upTimeStr": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "rkentry.MemInfo": {
            "type": "object",
            "properties": {
                "forceGcCount": {
                    "type": "integer"
                },
                "gcCountTotal": {
                    "type": "integer"
                },
                "lastGcTimestamp": {
                    "type": "string"
                },
                "memAllocByte": {
                    "type": "integer"
                },
                "memUsedMb": {
                    "type": "integer"
                },
                "memUsedPercentage": {
                    "type": "number"
                },
                "sysAllocByte": {
                    "type": "integer"
                }
            }
        },
        "rkentry.NetInfo": {
            "type": "object",
            "properties": {
                "netInterface": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rkentry.NetInterface"
                    }
                }
            }
        },
        "rkentry.NetInterface": {
            "type": "object",
            "properties": {
                "addrs": {
                    "description": "A list of unicast interface addresses for a specific interface.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "flags": {
                    "description": "e.g., FlagUp, FlagLoopback, FlagMulticast",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hardwareAddr": {
                    "description": "IEEE MAC-48, EUI-48 and EUI-64 form",
                    "type": "string"
                },
                "mtu": {
                    "description": "maximum transmission unit",
                    "type": "integer"
                },
                "multicastAddrs": {
                    "description": "A list of multicast, joined group addresses for a specific interface",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "e.g., \"en0\", \"lo0\", \"eth0.100\"",
                    "type": "string"
                }
            }
        },
        "rkentry.OsInfo": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                }
            }
        },
        "rkentry.ProcessInfo": {
            "type": "object",
            "properties": {
                "appName": {
                    "type": "string"
                },
                "az": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "docsUrl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain": {
                    "type": "string"
                },
                "gid": {
                    "type": "string"
                },
                "homeUrl": {
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maintainers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "realm": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "upTimeSec": {
                    "type": "integer"
                },
                "upTimeStr": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "rkentry.ReqMetricsRK": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "elapsedNanoP50": {
                    "type": "number"
                },
                "elapsedNanoP90": {
                    "type": "number"
                },
                "elapsedNanoP99": {
                    "type": "number"
                },
                "elapsedNanoP999": {
                    "type": "number"
                },
                "path": {
                    "type": "string"
                },
                "resCode": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rkentry.ResCodeRK"
                    }
                }
            }
        },
        "rkentry.ResCodeRK": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "resCode": {
                    "type": "string"
                }
            }
        },
        "rkgin.ApiResponse": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "swUrl": {
                    "type": "string"
                }
            }
        },
        "rkgin.CertResponse": {
            "type": "object",
            "properties": {
                "clientCert": {
                    "type": "string"
                },
                "clientCertPath": {
                    "type": "string"
                },
                "clientKeyPath": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "entryDescription": {
                    "type": "string"
                },
                "entryName": {
                    "type": "string"
                },
                "entryType": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "serverCert": {
                    "type": "string"
                },
                "serverCertPath": {
                    "type": "string"
                },
                "serverKeyPath": {
                    "type": "string"
                }
            }
        },
        "rkgin.ConfigResponse": {
            "type": "object",
            "properties": {
                "entryDescription": {
                    "type": "string"
                },
                "entryMeta": {
                    "type": "object",
                    "additionalProperties": true
                },
                "entryName": {
                    "type": "string"
                },
                "entryType": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "rkgin.EntryElement": {
            "type": "object",
            "properties": {
                "entryDescription": {
                    "type": "string"
                },
                "entryMeta": {
                    "$ref": "#/definitions/rkentry.Entry"
                },
                "entryName": {
                    "type": "string"
                },
                "entryType": {
                    "type": "string"
                }
            }
        },
        "rkgin.EntryResponse": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/rkgin.EntryElement"
                        }
                    }
                }
            }
        },
        "rkgin.GcResponse": {
            "type": "object",
            "properties": {
                "memStatAfterGc": {
                    "$ref": "#/definitions/rkentry.MemInfo"
                },
                "memStatBeforeGc": {
                    "$ref": "#/definitions/rkentry.MemInfo"
                }
            }
        },
        "rkgin.HealthyResponse": {
            "type": "object",
            "properties": {
                "healthy": {
                    "type": "boolean"
                }
            }
        },
        "rkgin.LogEntryElement": {
            "type": "object",
            "properties": {
                "entryDescription": {
                    "type": "string"
                },
                "entryMeta": {
                    "$ref": "#/definitions/rkentry.Entry"
                },
                "entryName": {
                    "type": "string"
                },
                "entryType": {
                    "type": "string"
                },
                "errorOutputPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "outputPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "rkgin.LogResponse": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/rkgin.LogEntryElement"
                        }
                    }
                }
            }
        },
        "rkgin.SysResponse": {
            "type": "object",
            "properties": {
                "cpuInfo": {
                    "$ref": "#/definitions/rkentry.CpuInfo"
                },
                "goEnvInfo": {
                    "$ref": "#/definitions/rkentry.GoEnvInfo"
                },
                "memInfo": {
                    "$ref": "#/definitions/rkentry.MemInfo"
                },
                "netInfo": {
                    "$ref": "#/definitions/rkentry.NetInfo"
                },
                "osInfo": {
                    "$ref": "#/definitions/rkentry.OsInfo"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "RK Swagger for Gin",
	Description: "This is a common service with rk-gin.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
